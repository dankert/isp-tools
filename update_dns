#!/bin/bash

# Erzeugt nach Bedarf neue Zonendateien für den Nameserver.
# Aus der Datenbank werden die Domain-Informationen geladen und daraus die Zonefiles geschrieben.

# Konfiguration:

CONFIG=/etc/default/ispconfig

if [ ! -f $CONFIG  ]; then
    echo "File $CONFIG not found"
    exit 4;
fi

source $CONFIG


if [ ! -d $DNS_ZONEDIR/.hg ]; then
    hg -R $DNS_ZONEDIR init
fi

function sql {
    sql=$1
    mysql -u $MYSQL_USER -p$MYSQL_PASSWORD -se "$sql" $MYSQL_DATABASE
}


# Datei mit allen Zonen erzeugen
last_domain_modified=`sql "SELECT max(unix_timestamp(modified)) FROM domain WHERE domain REGEXP('^[a-z0-9-]+\..[a-z]+\$') and active=1"`
last_file_modified=`stat --format %Y $DNS_ALL_ZONES_FILE`

if [ "$last_domain_modified" -gt "$last_file_modified" ]; then

    echo "" > $DNS_ALL_ZONES_FILE
    sql "SELECT domain FROM domain WHERE domain REGEXP('^[a-z0-9-]+\..[a-z]+\$') and active=1 order by domain"|while read domain; do
	cat >> $DNS_ALL_ZONES_FILE <<EOF

zone "$domain" {
  type master;
  file "$DNS_ZONEDIR/db.$domain";
};
EOF
    done
    
    # Änderung Einchecken
    hg -R $DNS_ZONEDIR diff $DNS_ALL_ZONES_FILE
    hg -R $DNS_ZONEDIR add $DNS_ALL_ZONES_FILE
    hg -R $DNS_ZONEDIR commit -u `whoami`/$0 -m "Master-Zonefile $ZONEFILE changed from Cron" $DNS_ALL_ZONES_FILE

fi


sql "SELECT domain FROM domain WHERE domain REGEXP('^[a-z0-9-]+\..[a-z]+\$') and active=1"|while read domain; do
    
    #echo "Domain: $domain"
    last_modified=`sql "SELECT max(unix_timestamp(modified)) FROM domain WHERE domain like '%.$domain' OR domain='$domain'"`
    
    
	ZONEFILE=$DNS_ZONEDIR/db.$domain
	if [ -f $ZONEFILE ]; then # Zonefile schon vorhanden?
	    modified=`stat --format %Y $ZONEFILE`
	else
	    modified=0 # Noch kein Zonefile vorhanden
	fi

    # Ist das letzte Datum aus der Datenbank größer als das Änderungsdatum des Zonefiles?
    if	[ "$last_modified" -gt "$modified" ]; then
	echo "Zonefile $ZONFILE wird aktualisiert (Letzte Änderung der Datei: $modified, Letzte Änderung in Datenbank: $last_modified"
	serial=`date --date @$last_modified +"%Y%m%d%H"` # Seriennummer, eindeutig pro Stunde


	cat > $ZONEFILE <<ZEOF
;
; Domain: $domain
;
\$TTL 2H
@                     IN SOA   $DNS_SERVER_PRIMARY. root.$DNS_SERVER_PRIMARY. $serial 86400 10800 1209600 57600
                      IN NS    $DNS_SERVER_PRIMARY.
                      IN NS    $DNS_SERVER_SECONDARY.
                      IN A     $DNS_SERVER_IPV4
                      IN AAAA  $DNS_SERVER_IPV6
                      IN TXT   "v=spf1 a mx -all"
ZEOF

	# Hat die Domain Mailboxen oder Aliases? Falls ja, dann MX-Eintrag ergänzen
        count_mailboxes=`sql "select sum(c) FROM
                         ( select count(*) as c from mailbox WHERE domain='$domain' union all
                           select count(*) as c FROM alias   WHERE domain='$domain'             ) as counts"`
        if [ "$count_mailboxes" -gt 0 ]; then
    		echo "                      IN MX    10 $DNS_MX_HOST1." >> $ZONEFILE
    		echo "                      IN MX    20 $DNS_MX_HOST2." >> $ZONEFILE
        fi

	# Subdomain-Liste
        sql "SELECT replace(domain,'.$domain','') as subdomain FROM domain WHERE domain like '%.$domain' order by subdomain"|while read subdomain; do
            subdomain_rpad=`echo -n $subdomain|sed -e :a -e 's/^.\{1,20\}$/& /;ta'`  # Subdomain 24-stellig aufgefuellt mit Leerzeichen
	    echo "$subdomain_rpad IN A     $DNS_SERVER_IPV4" >> $ZONEFILE
	    echo "$subdomain_rpad IN AAAA  $DNS_SERVER_IPV6" >> $ZONEFILE
	    
	    # Hat die Subdomain Mailboxen oder Aliases? Falls ja, dann MX-Eintrag ergänzen
    	    count_mailboxes=`sql "select sum(c) FROM
                         ( select count(*) as c from mailbox WHERE domain='$subdomain.$domain' union all
                           select count(*) as c FROM alias   WHERE domain='$subdomain.$domain'             ) as counts"`

    	    if [ "$count_mailboxes" -gt 0 ]; then
    		echo "$subdomain_rpad IN MX    10 $DNS_MX_HOST1." >> $ZONEFILE
    		echo "$subdomain_rpad IN MX    20 $DNS_MX_HOST2." >> $ZONEFILE
    	    fi
	    
	done
	echo "" >> $ZONEFILE

                                                                                                                              

	# Änderung Einchecken
	hg -R $DNS_ZONEDIR diff $ZONEFILE
	hg -R $DNS_ZONEDIR add $ZONEFILE
	hg -R $DNS_ZONEDIR commit -u `whoami`/$0 -m "Zonefile $ZONEFILE changed from Cron" $ZONEFILE
	
	# Zonefile im Bind neu laden
	rndc reload
	rndc status
    fi
    
done

