#!/bin/bash

# Erzeugt die Virtual-Host-Konfigurationen fuer den Apache-Webserver.
#


# Konfiguration:

CONFIG=/etc/default/ispconfig

if [ ! -f $CONFIG  ]; then
    echo "File $CONFIG not found"
    exit 4;
fi

source $CONFIG


if [ ! -d $HTTPD_VHOST_DIR  ]; then
    echo "Directory $HTTPD_VHOST_DIR not found"
    exit 4;
fi

# Ggf. Mercurial-Repository anlegen.
if [ ! -d $HTTPD_VHOST_DIR/.hg ]; then
    hg -R $HTTPD_VHOST_DIR init
fi


function sql {
    sql=$1
    mysql -u $MYSQL_USER -p$MYSQL_PASSWORD -se "$sql" $MYSQL_DATABASE
}


sql "SELECT domain,active,UNIX_TIMESTAMP(modified),x_ssl,x_db,x_php FROM domain"|while read domain active modified ssl db php; do

    CONFFILE=$HTTPD_VHOST_DIR/$domain

    if [ ! -f $CONFFILE ]; then
	last_file_modified=0 # Datei existiert noch nicht.
    else
	last_file_modified=`stat --format %Y $CONFFILE`
    fi

    if	[ "$modified" -gt "$last_file_modified" ]; then

        echo "Aktualisiere $domain"
	cat > $CONFFILE <<EOF
	
# AUTO-GENERATED - DO NOT CHANGE!
# Domain: $domain (active: $active, SSL: $ssl, Database: $db, PHP: $php)
EOF
    if [ $active -eq 0 ]; then
	cat >> $CONFFILE <<EOF
# domain is inactive.
<VirtualHost *:80>
    ServerName $domain

    RewriteEngine on
    RewriteRule (.*) - [L,R=410]
</VirtualHost>
<VirtualHost *:443>
    ServerName $domain

    RewriteEngine on
    RewriteRule (.*) - [L,R=410]
</VirtualHost>
EOF

    
    else
	# Domain ist aktiv.
	# Den Benutzer zur Domain zu finden. Es ist der (hoffentlich einzige) <Benutzername>@webmaster..., der für die Domain berechtigt ist.
	user=`sql "SELECT substring_index(username,'@',1) as user FROM domain_admins where domain='$domain' and username like '%@webmaster%'"`
	echo "User: $user  ==>  Domain: $domain"
    
    
	# Gibt es einen Domain-Admin?
	if [ ! "$user" ]; then
    
	# Kein Domain-Admin vorhanden, die Domain hat keine regulaeren Inhalte.
    	if [ -f $HTTPD_EXTRA_CONFIG_DIR/$domain.conf ]; then
		cat >> $CONFFILE <<EOF
	
<VirtualHost *:80>
    # No domain owner available
    ServerName $domain
    Include $HTTPD_EXTRA_CONFIG_DIR/$domain.conf
</VirtualHost>
EOF
	else

		cat >> $CONFFILE <<EOF
	
<VirtualHost *:80>
    # Domain owner: $user
    ServerName $domain

    RewriteEngine on
    RewriteRule (.*) - [L,R=410]
</VirtualHost>
EOF
	fi
	else
	    cat >> $CONFFILE <<EOF
# Domain administrator user account: $user
EOF
	    # Es gibt einen Domainverwalter.
	    # Docroot:
	    docroot=/home/$user/var/www/$domain
	
	    if [ ! -d $docroot ]; then
		# Document-Root existiert noch nicht, also anlegen.
		mkdir -v $docroot
		chown -v $user $docroot
	    fi
	
	

    	    log_dir=/home/$user/var/log/apache2/$domain
	
	    if [ ! -d $log_dir ]; then
		mkdir -v $log_dir
	    fi
	
	    #echo "Logdir: $log_dir"
	
	
	
	    # Zertifikatsdatei bestimmen
	    key=/etc/ssl/local/server.key
	    crt=/etc/ssl/local/cert/$domain.crt
	
	    if [ $ssl -eq 0 ] || [ ! -f $crt ]; then
	      # no SSL or no SSL cert available
		cat >> $CONFFILE <<EOF
	
#<VirtualHost *:443>
#    # Deny SSL
#    ServerName $domain
#    SSLEngine off
#    RewriteEngine on
#    RewriteRule (.*) http://$domain\$1 [R,L]
#</VirtualHost>

<VirtualHost *:80>
EOF
	    else
		
		cat >> $CONFFILE <<EOF
	
<VirtualHost *:80>
    ServerName $domain
    # Force SSL
    RewriteEngine on
    RewriteCond %{REQUEST_URI} !^/\.well-known/acme-challenge/
    RewriteRule ^(.*)$ https://$domain\$1 [R=301,L]
</VirtualHost>

<VirtualHost *:443>

    SSLEngine on
    SSLCertificateFile    $crt
    SSLCertificateKeyFile $key
    
    SSLProtocol All -SSLv2 -SSLv3
    #SSLCipherSuite HIGH:MEDIUM
    
    SSLHonorCipherOrder On
    SSLCipherSuite ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
EOF
		fi
		

		cat >> $CONFFILE <<EOF
    ServerName $domain
    ServerAdmin webmaster@$domain

    DocumentRoot $docroot


    ErrorLog $log_dir/error.log
    CustomLog $log_dir/access.log combined
EOF
		if [ -f $HTTPD_EXTRA_CONFIG_DIR/$domain.conf ]; then
		    cat >> $CONFFILE <<EOF
    Include $HTTPD_EXTRA_CONFIG_DIR/$domain.conf
EOF
		fi

		# PHP aktiviert?
		if [ $php -eq 1 ]; then
    		cat >> $CONFFILE <<EOF
    php_admin_flag engine on
    php_admin_value sendmail_path "/usr/sbin/sendmail -t -i -r webmaster@$domain"
    php_admin_value open_basedir /home/$user/var/www/$domain:/home/$user/tmp
    php_admin_value upload_tmp_dir /home/$user/tmp
EOF
		else
    		    cat >> $CONFFILE <<EOF
    php_admin_flag engine off
EOF
		fi
	
		#if [ $php -eq 1 && $db -eq 1 ]; then
		if [ $db -eq 1 ]; then
		    if [ -f $HTTPD_MYSQL_PASSWD_DIR/$domain.passwd ]; then
			source $HTTPD_MYSQL_PASSWD_DIR/$domain.passwd
			echo "pass ist $mysql_password"
			cat >> $CONFFILE <<EOF
    php_value mysql.default_host localhost
    php_value mysql.default_user $mysql_user
    php_value mysql.default_password $mysql_password

    php_value mysqli.default_host localhost
    php_value mysqli.default_user $mysql_user
    php_value mysqli.default_pw $mysql_password
EOF

		    fi
    		fi
		cat >> $CONFFILE <<EOF
</VirtualHost>
EOF
	    fi
	    
        fi

    fi
    


done


# Apache-Webserver muss Konfiguration neu laden
if [ `hg -R $HTTPD_VHOST_DIR status -m -a -u|wc -l` -gt 0 ]; then

    echo "Änderungen durchgeführt:"
    hg -R $HTTPD_VHOST_DIR diff
    hg -R $HTTPD_VHOST_DIR commit -A -u `whoami` -m "Updating HTTPD configuration"


    if [ ! `apache2ctl -t|grep "Syntax OK"|wc -l` -eq "0" ]; then
	echo "Apache-Konfiguraton ist fehlerhaft! Kein Restart!"
	apache2ctl -t
    else
	echo "Apache-Konfiguration ist OK."
	echo "Reloading Apache Webserver."
	apache2ctl restart 
    fi
fi

